#include<iostream>

using namespace std;

/*Задание 4. Банкомат — 2
Что нужно сделать
Напишите программу для банкомата.

Условие:

Однажды Вася подошёл к банкомату и захотел обналичить N рублей. 

В банкомате есть купюры достоинством 100, 200, 500, 1 000, 2 000 и 5 000 рублей. 
Банкомат хочет выдать Васе запрошенную сумму, обойдясь как можно меньшим числом купюр.

Напишите программу для банкомата, которая по заданному числу N: 

решает, сколько купюр каждого номинала нужно выдать (4 по 200, 1 по 1 000) для получения суммы ровно N рублей; 
либо говорит, что выдать ровно N рублей невозможно, например если N не делится на 100.
Учтите, что банкомат не может выдать за один раз более 150 000 рублей. 

При попытке запросить такую сумму должно быть выдано сообщение об ошибке. 
Например, 800 рублей нужно выдать как 1 по 500, 1 по 200 и ещё 1 по 100.

Советы и рекомендации
Используйте как деление, так и получение остатка от деления.
Постарайтесь выдать самый оптимальный набор купюр.
Помните, что банкомат не может выдать за один раз более 150 000 рублей*/

int main()
{
	setlocale(LC_ALL, "ru");

	int sum;
	cout << "Введите сумму для снятия: ";
	cin >> sum;

	if (sum % 100 != 0) 
	{
		cout << "Сумму " << sum << " рублей невозможно выдать. Введите сумму, кратную 100." << endl;
		return 0;
	}

	if (sum > 150000) 
	{
		cout << "Сумму " << sum << " рублей невозможно выдать за один раз. Введите меньшую сумму." << endl;
		return 0;
	}

	int banknotes5000 = sum / 5000;
	sum %= 5000;

	int banknotes2000 = sum / 2000;
	sum %= 2000;

	int banknotes1000 = sum / 1000;
	sum %= 1000;

	int banknotes500 = sum / 500;
	sum %= 500;

	int banknotes200 = sum / 200;
	sum %= 200;

	int banknotes100 = sum / 100;

	cout << "Выдать следующее количество купюр:" << endl;
	cout << "5000 рублей: " << banknotes5000 << endl;
	cout << "2000 рублей: " << banknotes2000 << endl;
	cout << "1000 рублей: " << banknotes1000 << endl;
	cout << "500 рублей: " << banknotes500 << endl;
	cout << "200 рублей: " << banknotes200 << endl;
	cout << "100 рублей: " << banknotes100 << endl;

	return 0;
}