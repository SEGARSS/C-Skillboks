#include<iostream>
using namespace std;

/*Задача 2 
Что нужно сделать
Кролик сидит на нулевой ступеньке большой лестницы. 
Он может прыгать на одну или более ступенек вверх, 
но не далее чем на k. Кролик хочет допрыгать до n-й ступеньки, 
но может сделать это большим количеством способов. 

Напишите рекурсивную функцию, которая принимает число n типа int и число k — максимальную длину прыжка, 
а возвращает количество способов, которым кролик может доскакать до n-й ступеньки. 
В функции для аргумента “максимальная длина прыжка” задать значение, по умолчанию равное 3.*/

//--------------------------------------------------------------------------------------
int countWays(int n, int k = 3) // Рекурсивная функция для подсчета количества способов допрыгать до n-й ступеньки
{
	// Если n меньше или равно 1, то кролик может допрыгнуть только одним способом
	if (n <= 1)
	{
		return 1;
	}

	// Инициализация переменной, в которой будет храниться общее количество способов
	int ways = 0;

	// Считаем общее количество способов, вызывая рекурсивно функцию для всех возможных прыжков кролика
	for (int i = 1; i <= k && n - i >= 0; i++)
	{
		ways += countWays(n - i, k);
	}

	return ways;
}
//--------------------------------------------------------------------------------------
int main()
{
	setlocale(LC_ALL,"ru");

	int n, k;
	
	cout << "Введите число n (номер ступеньки): ";
	cin >> n;

	cout << "Введите максимальную длину прыжка k: ";
	cin >> k;

	int ways = countWays(n, k);

	cout << "Количество способов допрыгать до " << n << "-й ступеньки: " << ways << endl;

	return 0;
}
//--------------------------------------------------------------------------------------