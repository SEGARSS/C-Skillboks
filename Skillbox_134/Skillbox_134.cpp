#include <iostream>
#include <map>
#include <stdexcept>

using namespace std;

/*Задание 1. Работа корзины с покупками
Что нужно сделать
Реализуйте простую и безопасную модель работы корзины онлайн-магазина.
• В начале программы вы заполняете базу данных самого магазина через стандартную консоль.
Каждый элемент этой базы данных состоит из двух компонентов — артикула и количества штук.
• Корзина должна поддерживать следующие операции: добавление товара с указанным его количеством — add,
удаление товара с указанным количеством — remove.
Обе операции принимают артикул товара в виде строки и количество в виде целого числа.
• При вводе аргументов к операциям должна осуществляться их валидация.
Артикул должен быть в базе данных магазина,
количество не должно превышать количество доступного продукта на складе (при удалении — в корзине).*/

//---------------------------------------------------------------------------------------------------------------------
class OnlineShop
{
public:

	// Добавление товара с указанным количеством
	void add(const string& article, int quantity)
	{
		// Проверка, есть ли товар в базе данных магазина
		if (inventory.find(article) == inventory.end())
		{
			throw invalid_argument("Товар с таким артикулом не найден.");
		}

		// Проверка, чтобы количество не было отрицательным
		if (quantity <= 0)
		{
			throw invalid_argument("Количество товара должно быть положительным числом.");
		}

		// Добавление товара в корзину
		inventory[article] += quantity;
		cout << "Товар успешно добавлен в корзину." << endl;
	}

	// Удаление товара с указанным количеством
	void remove(const string& article, int quantity)
	{
		// Проверка, есть ли товар в корзине
		if (inventory.find(article) == inventory.end())
		{
			throw invalid_argument("Товар с таким артикулом не найден в корзине.");
		}

		// Проверка, чтобы количество не было отрицательным
		if (quantity <= 0)
		{
			throw invalid_argument("Количество товара для удаления должно быть положительным числом.");
		}

		// Проверка, чтобы количество товара в корзине было не меньше указанного для удаления
		if (inventory[article] < quantity)
		{
			throw invalid_argument("Указанное количество товара для удаления превышает количество товара в корзине.");
		}

		// Удаление товара из корзины
		inventory[article] -= quantity;
		cout << "Товар успешно удален из корзины." << endl;
	}

private:
	map<string, int> inventory; // База данных магазина
};
//---------------------------------------------------------------------------------------------------------------------
int main()
{
	setlocale(LC_ALL, "ru");

	OnlineShop shop;

	// Добавление товаров в базу данных магазина
	shop.add("12345", 10);
	shop.add("67890", 20);

	try
	{
		// Добавление товара в корзину
		shop.add("12345", 5);
		// Удаление товара из корзины
		shop.remove("12345", 3);
	}
	catch (const exception& e)
	{
		cerr << "Ошибка: " << e.what() << endl;
	}

	return 0;
}
//---------------------------------------------------------------------------------------------------------------------