#include <iostream>
#include <vector>

using namespace std;

/*Задание 3. Реализация программы управления окном рабочего стола
Что нужно сделать
Реализуйте симуляцию работы окна в визуальном интерфейсе пользователя.
Окно располагается на виртуальном экране монитора, размером 80 × 50 точек.
У окна есть несколько параметров, которые также задаются в пикселях:
двумерные координаты левого верхнего угла и размеры, ширина и высота.
Ширина и высота при этом не могут быть отрицательными, а координаты не могут выходить за область экрана.

Пользователь взаимодействует с программой с помощью команд:

• Команда move принимает вектор, на который надо сместить окно на экране.
Сообщение с новыми координатами окна появляется на экране.
• Команда resize запрашивает из стандартного ввода новый размер окна.
После изменения размера сообщение с новым размером выводится на экране.
• Команда display выводит текущее изображение монитора в консоль. 0 — это пиксель вне области окна, 1 — с окном.
• Команда close закрывает окно, выход из программы.*/

//---------------------------------------------------------------------------------------------
class Window
{
public:
	// Коструктор
	Window(int x, int y, int w, int h) 
	: topLeftX(x), topLeftY(y), width(w), height(h) 
	{
	}

	// Метод для перемещения окна
	void move(int dx, int dy) 
	{
		topLeftX += dx;
		topLeftY += dy;
		cout << "Окно перемещено на (" << dx << ", " << dy << "). Новые координаты: (" << topLeftX << ", " << topLeftY << ")" << endl;
	}

	// Метод для изменения размера окна
	void resize(int newWidth, int newHeight) 
	{
		if (newWidth > 0 && newHeight > 0) 
		{
			width = newWidth;
			height = newHeight;
			cout << "Размеры окна изменены на " << newWidth << "x" << newHeight << endl;
		}
		else 
		{
			cout << "Ширина и высота окна должны быть положительными числами." << endl;
		}
	}

	// Метод для отображения текущего состояния экрана
	void display() const 
	{
		vector<vector<int>> screen(50, vector<int>(80, 0)); // Создание пустого экрана

		// Отметить пиксели, на которых расположено окно
		for (int y = topLeftY; y < topLeftY + height; ++y) 
		{
			for (int x = topLeftX; x < topLeftX + width; ++x) 
			{
				if (x >= 0 && x < 80 && y >= 0 && y < 50) 
				{
					screen[y][x] = 1;
				}
			}
		}

		// Отображение экрана
		for (int y = 0; y < 50; ++y) 
		{
			for (int x = 0; x < 80; ++x) 
			{
				cout << (screen[y][x] ? "1" : "0");
			}
			cout << endl;
		}
	}

private:
	int topLeftX;
	int topLeftY;
	int width;
	int height;
};
//---------------------------------------------------------------------------------------------
int main()
{
	setlocale(LC_ALL, "ru");

	// Создание окна
	Window window(10, 10, 20, 10);

	while (true) 
	{
		cout << "Введите команду (move, resize, display, close): ";
		string command;
		cin >> command;

		if (command == "move") 
		{
			int dx, dy;
			cout << "Введите смещение по горизонтали и вертикали: ";
			cin >> dx >> dy;
			window.move(dx, dy);
		}
		else if (command == "resize") 
		{
			int newWidth, newHeight;
			cout << "Введите новые размеры окна (ширина и высота): ";
			cin >> newWidth >> newHeight;
			window.resize(newWidth, newHeight);
		}
		else if (command == "display") 
		{
			window.display();
		}
		else if (command == "close") 
		{
			cout << "Окно закрыто. Выход из программы." << endl;
			break;
		}
		else 
		{
			cout << "Недопустимая команда. Пожалуйста, попробуйте снова." << endl;
		}
	}

	return 0;
}
//---------------------------------------------------------------------------------------------